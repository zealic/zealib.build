<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ZealibBuildPath Condition="'$(ZealibBuildPath)' == ''">$(MSBuildExtensionsPath)\Zealib.Build</ZealibBuildPath>
    <ZealibBuild-CodePath>$(ZealibBuildPath)\Common\Code\</ZealibBuild-CodePath>
    <!-- Code files -->
    <ZealibBuild-CodeFile-CleanSolutionFile>$(ZealibBuild-CodePath)\CleanSolutionFile.cs</ZealibBuild-CodeFile-CleanSolutionFile>
    <ZealibBuild-CodeFile-FindCommand>$(ZealibBuild-CodePath)\FindCommand.cs</ZealibBuild-CodeFile-FindCommand>
    <!-- Code contents -->
    <ZealibBuild-Code-CleanSolutionFile>$([MSBuild]::Unescape($(ZealibBuild-Code-CleanSolutionFile)))</ZealibBuild-Code-CleanSolutionFile>
    <ZealibBuild-Code-ProcessFile>$([System.IO.File]::ReadAllText($(ZealibBuild-CodePath)\ProcessFile.cs))</ZealibBuild-Code-ProcessFile>
    <ZealibBuild-Code-ProcessFile>$([MSBuild]::Unescape($(ZealibBuild-Code-ProcessFile)))</ZealibBuild-Code-ProcessFile>
    <ZealibBuild-Code-XorStream>$([System.IO.File]::ReadAllText($(ZealibBuild-CodePath)\XorStream.cs))</ZealibBuild-Code-XorStream>
    <ZealibBuild-Code-XorStream>$([MSBuild]::Unescape($(ZealibBuild-Code-XorStream)))</ZealibBuild-Code-XorStream>
    <ZealibBuild-Code-Base64Stream>$([System.IO.File]::ReadAllText($(ZealibBuild-CodePath)\Base64Stream.cs))</ZealibBuild-Code-Base64Stream>
    <ZealibBuild-Code-Base64Stream>$([MSBuild]::Unescape($(ZealibBuild-Code-Base64Stream)))</ZealibBuild-Code-Base64Stream>
  </PropertyGroup>
  
  <PropertyGroup>
    <MSBuildTasks-Assembly Condition="'$(MSBuildTasks-Assembly)' == ''">$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll</MSBuildTasks-Assembly>
  </PropertyGroup>
  
  <UsingTask
      TaskName="ProcessFile"
      TaskFactory="CodeTaskFactory"
      AssemblyFile="$(MSBuildTasks-Assembly)" >
    <ParameterGroup>
      <InputFile ParameterType="System.String" Required="True" />
      <OutputFile ParameterType="System.String" Required="True" />
      <IsEncode ParameterType="System.Boolean" Required="True" />
      <Pipelines ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="True" />
    </ParameterGroup>
    <Task>
      <Code Type="Class" Language="cs">
<![CDATA[
$(ZealibBuild-Code-ProcessFile)
$(ZealibBuild-Code-XorStream)
$(ZealibBuild-Code-Base64Stream)
]]></Code>
    </Task>
  </UsingTask>
  
  <UsingTask
      TaskName="CleanSolutionFile"
      TaskFactory="CodeTaskFactory"
      AssemblyFile="$(MSBuildTasks-Assembly)" >
    <ParameterGroup>
      <Files ParameterType="System.String[]" Required="True" />
      <DestinationFiles ParameterType="System.String[]" Output="True" />
      <ProjectNamePatterns ParameterType="System.String[]" />
      <ItemPatterns ParameterType="System.String[]" />
      <ForceOverwrite ParameterType="System.Boolean" />
    </ParameterGroup>
    <Task>
      <Code Source="$(ZealibBuild-CodeFile-CleanSolutionFile)" Language="cs" />
    </Task>
  </UsingTask>
  
  <UsingTask
      TaskName="FindCommand"
      TaskFactory="CodeTaskFactory"
      AssemblyFile="$(MSBuildTasks-Assembly)" >
    <ParameterGroup>
      <Name ParameterType="System.String" Required="True" />
      <Paths ParameterType="System.String[]" />
      <PathExtensions ParameterType="System.String[]" />
      <NoResultFailure ParameterType="System.Boolean" />
      <HasResult ParameterType="System.Boolean" Output="True" />
      <FirstResult ParameterType="Microsoft.Build.Framework.ITaskItem" Output="True" />
      <LastResult ParameterType="Microsoft.Build.Framework.ITaskItem" Output="True" />
      <Resulst ParameterType="Microsoft.Build.Framework.ITaskItem[]" Output="True" />
    </ParameterGroup>
    <Task>
      <Code Source="$(ZealibBuild-CodeFile-FindCommand)" Language="cs" />
    </Task>
  </UsingTask>
</Project>